{"componentChunkName":"component---src-pages-search-jsx","path":"/search/","result":{"data":{"allMarkdownRemark":{"nodes":[{"excerpt":"Node 앱을 Amazon EC2 인스턴스에 배포해봅시다. 1. Node.js 설치하기 EC2 인스턴스에 Node.js를 설치합니다. nvm(Node Version Manager)을 사용하면 여러 버전간 전환이 용이하다. nvm을 설치한다. nvm을 활성화 시키고 LTS 버전의 Node.js를 설치한다. Node.js가 올바르게 설치되었는지 확인한다. 2…","fields":{"slug":"/nodejs-nextstep-02-deploying-nodejs-app-on-aws-ec2-instance/"},"frontmatter":{"date":"March 02, 2024","title":"Node.js 입문 (1) - EC2 배포하기","tags":["node"]},"rawMarkdownBody":"\nNode 앱을 Amazon EC2 인스턴스에 배포해봅시다.\n\n### 1. Node.js 설치하기\n\nEC2 인스턴스에 Node.js를 설치합니다.\n\n```shell\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash\n```\n\n> nvm(Node Version Manager)을 사용하면 여러 버전간 전환이 용이하다.\n\nnvm을 설치한다.\n\n```shell\n. ~/.nvm/nvm.sh\nnvm install --lts\n```\n\nnvm을 활성화 시키고 LTS 버전의 Node.js를 설치한다.\n\n```shell\nnode --version\n```\n\nNode.js가 올바르게 설치되었는지 확인한다.\n\n\n### 2. 코드복사하기\n\n작성한 코드를 EC2 인스턴스로 복사해야 한다. 이때 2가지 선택지가 있다. 두가지 방법중 한가지로 선택하자. 실습에서는 이미 버전관리를 진행중이기 때문에 git을 선택했다.\n\n* SCP(secure copy)\n\n```shell\nscp -r <local-project-directory> ec2-user@<ec2-instance-ip>:/home/ec2-user/\n```\n\n* Git\n\n```shell\nsudo yum update -y\nsudo yum install git -y\n```\n\n> yum(Yellodog Update Modified)은 레드햇 계열의 리눅스 배포판에서 사용하는 패키지 설치 관리 도구이다. npm과 유사하다.\n\n```shell\ngit clone <프로젝트 주소>\n```\n\n프로젝트를 배포할 디렉토리로 이동한 후, Git 저장소를 클론한다.\n\n```shell\ncd <프로젝트>\nnpm install\n```\n클론한 프로젝트로 이동한 후 Node.js 앱 의존성을 설치한다.\n\n```shell\npm2 start app.js\n```\n\n애플리케이션을 실행한다. 이때 PM2를 프로세스를 관리한다.\n\n### 참고\n\n* [nvm](https://github.com/nvm-sh/nvm)\n* [Amazon EC2 인스턴스 Node.js 설정](https://docs.aws.amazon.com/ko_kr/sdk-for-javascript/v2/developer-guide/setting-up-node-on-ec2-instance.html)\n"},{"excerpt":"깊이있게 학습을 하기 위해서는 원리를 알아야 한다. 웹 프레임워크(Express, NestJS)의 사용법 외에 프레임워크가 어떤 문제로 개선되었는지 원리를 파악해보자. 짧은 시간이었지만 NestJS 프레임워크를 사용할 때 어려움이 많았다. (특히 테스트) 왜 Testing Module을 구성하고 어떤 패키지가 사용되는지 전혀 알지 못했다. 잘못된 방법으로…","fields":{"slug":"/nodejs-nextstep-01-settings/"},"frontmatter":{"date":"March 01, 2024","title":"Node.js 입문 (0) - 프로젝트 환경 설정","tags":["node"]},"rawMarkdownBody":"\n**깊이있게 학습을 하기 위해서는 원리를 알아야 한다.** 웹 프레임워크(Express, NestJS)의 사용법 외에 프레임워크가 어떤 문제로 개선되었는지 원리를 파악해보자.\n\n짧은 시간이었지만 NestJS 프레임워크를 사용할 때 어려움이 많았다. (특히 테스트) 왜 Testing Module을 구성하고 어떤 패키지가 사용되는지 전혀 알지 못했다. 잘못된 방법으로\n학습하고 있다는 생각이 들어 처음으로 돌아가보려 한다. MVC 프레임워크를 만들어 보는 것이 목표다.\n\n## 개발 환경 구성\n\n### 프로젝트 만들기\n\n```shell\nmkdir nodejs-nextstep && cd nodejs-nextstep\n```\n\n프로젝트 폴더를 만들고 해당 폴더로 이동한다.\n\nJetBrains IDE(IntelliJ, WebStorm...)에서 TypeScript 파일을 단독으로 실행할 수 없다. 실행을 위해서는 플러그인과 패키지를 설치해야 한다.\n\n* [Run Configuration for TypeScript](https://plugins.jetbrains.com/plugin/10841-run-configuration-for-typescript/)\n* [ts-node](https://www.npmjs.com/package/ts-node)\n\n```shell\nyarn add ts-node -D # 개발 의존성\n```\n\n### 코드 품질 도구\n\n* ESLint, Prettier\n\n### 테스트 환경 구성\n\n테스트 환경에 설치하는 패키지는 모두 개발 의존성으로 설치한다.\n\n```shell\nyarn add jest ts-jest supertest @types/jest @types/supertest -D\n```\n"},{"excerpt":"다사다난 한 2월이 끝났다. 1년을 한달 앞 둔 지금, 어떤일이 있었을까? 2월 돌아보기 잔병치레 면역력이 떨어진 모양이다. 이번달에 특히 더 고생했다. 양쪽 귀에 염증도 생기고 속도 안 좋았다. 스트레스를 잘 관리했다고 생각했는데 아니었다.\n몸이 마음대로 안 움직이니 답답했다. 걱정도 더욱 많아지고 생각의 늪에 잠식당할 뻔했다. 몸이 보내는 경고 덕분에…","fields":{"slug":"/2024-02-retrospective/"},"frontmatter":{"date":"February 29, 2024","title":"2월 회고","tags":["회고"]},"rawMarkdownBody":"\n다사다난 한 2월이 끝났다. 1년을 한달 앞 둔 지금, 어떤일이 있었을까?\n\n## 2월 돌아보기\n\n### 잔병치레\n\n면역력이 떨어진 모양이다. 이번달에 특히 더 고생했다. 양쪽 귀에 염증도 생기고 속도 안 좋았다. 스트레스를 잘 관리했다고 생각했는데 아니었다.\n몸이 마음대로 안 움직이니 답답했다. 걱정도 더욱 많아지고 생각의 늪에 잠식당할 뻔했다.\n\n몸이 보내는 경고 덕분에 다시 운동을 시작했다. 최근 나태하고 균형 있게 잠들지도 않았던 나를 다시 돌아볼 수 있는 시간이었다.\n8시간 푹 자는 시간을 제외한 남은 16시간을 알차게 사용해야겠다.\n\n### [30만 수강생 기념] 김영한님 밋업\n\n매일 잠들기 전에 휴대폰 알림을 확인한다. 늘 그렇듯 광고 메시지들이 쌓여있겠지? 하는 생각으로 메시지를 확인했는데 당황스러웠다. 오프라인 밋업에 당첨됐다.\n설레는 마음을 가득안고 인프랩으로 향했다.\n\n![김영한님 오프라인 밋업](images/inflearn-meet-up.png)\n\n너무 만족스러운 시간이었다. 영한님과 향로님께서 풀어내시는 이야기의 주제들, 답변이 좋았다. 특히 온라인으로 진행되는 라이브가 끝나고 가진 시간이 유익했다.\n라이브 세션은 포괄적인 답변이었다면 오프라인에서 진행된 세션은 다양한 사연들(시니어, 주니어, 취준생)에 가감 없는 답변이 오갔다. \n특히 늦은 시간까지 질문도 정말 많이 받아주셨다. 행사 관계자분들께 감사드립니다.\n\n### 여행\n\n![강원도 묵호 🌅](images/sunset.png)\n\n오랜만에 가족여행을 다녀왔다. 출발 전까지만 해도 밀린 과제들이 많아서 걱정이 앞섰는데 다녀오길 잘했다. 목 놓아 외치던 바다도 마음껏 보며 바람에 몸을 맡겼다.\n결과적으로 기분전환이 되었고 능률이 향상되었다. 목표를 위해 견디는 것도 좋지만 가끔 기분전환을 해야겠다.\n\n### 블로그\n\n방랑자의 삶을 마치고 **Gatsby로 최종결정했다.**\n\n예전부터 블로그를 만들고 학습내용을 정리하는 방법에 대해 추천받았다. 알고있었지만 괜찮은 플랫폼이 마땅히 보이지 않았고, 결국 각 저장소에 문서를 작성했다.\n그런데 이 방법이 문제가 있었다. 문서를 찾기 어려웠다. 내가 작성한 문서를 찾는데 불필요한 시간 소모가 반복되었다. 이럴거면 어차피 정리하던거 본격적으로 해보자 다짐했다.\n\n## 마치며\n\n한 달 후면 1년이다. 작성하고 하고 싶은 글이 많다. 저장소에 작성된 내용을 다듬어서 발행할 시간이다.\n\n* Series: 노드 웹 프로그래밍 Next Step: 배포하기\n\n적극적으로 살길 바란다. 취업전선에서 지원서도 넣으면서 지내야지. **3월은 더 많이 실패하자.**"},{"excerpt":"소중했던 2023년이 가고 2024년이 찾아왔다. 결과만 보았을 때 2023년 한 해는 안식년이었다. 원하는 결과를\n얻지 못했다. 하지만 끝없이 연습하고 나만의 루틴을 찾았다. 의식적인 연습 순탄치 않았다. 오래 쉬었다는 사실이 너무나 체감돼서 더욱더 노력하는 방법밖에 없었다. 견뎠다. 가장 큰 화두는\n꾸준함이다. 개발자를 다시 도전하는 게 맞나? 내가 …","fields":{"slug":"/good-bye-2023-hello-2024/"},"frontmatter":{"date":"January 01, 2024","title":"2023 회고","tags":["회고","연간회고"]},"rawMarkdownBody":"\n![Worlds 2023](images/worlds-2023.png)\n\n소중했던 2023년이 가고 2024년이 찾아왔다. 결과만 보았을 때 2023년 한 해는 안식년이었다. 원하는 결과를\n얻지 못했다. 하지만 끝없이 연습하고 나만의 루틴을 찾았다.\n\n## 의식적인 연습\n\n순탄치 않았다. 오래 쉬었다는 사실이 너무나 체감돼서 더욱더 노력하는 방법밖에 없었다. 견뎠다. 가장 큰 화두는\n꾸준함이다. 개발자를 다시 도전하는 게 맞나? 내가 잘하고 있는 건가? 의심도 많고 힘들었다. 한편으론 이대로 눈 감으면 마음\n편하지 않을까 싶기도 했다. 하지만 꾸준히 하다 보니 자연스럽게 스스로에게 던진 질문이 해결되고 이제는 확신이 생겼다.\n\n## 마무리\n\n올 해는 소중했던 한 해의 과정을 결과로 증명하는 한 해가 되길 바란다. 더 많은 기회와 위기가 찾아올 것이다. 초심을 잃지 않고\n아무것도 없이 시작했던 나를 믿고 응원해 준 사람들을 생각하며 정진하길 바란다. 할 수 있다."}]}},"pageContext":{}},"staticQueryHashes":[],"slicesMap":{}}