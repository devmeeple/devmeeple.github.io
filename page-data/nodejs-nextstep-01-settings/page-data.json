{"componentChunkName":"component---src-templates-post-jsx","path":"/nodejs-nextstep-01-settings/","result":{"data":{"site":{"siteMetadata":{"title":"장태근블로그"}},"markdownRemark":{"id":"2b28cb91-266c-555b-a6fc-61d8ab956952","excerpt":"깊이있게 학습을 하기 위해서는 원리를 알아야 한다. 웹 프레임워크(Express, NestJS)의 사용법 외에 프레임워크가 어떤 문제로 개선되었는지 원리를 파악해보자. 짧은 시간이었지만 NestJS 프레임워크를 사용할 때 어려움이 많았다. (특히 테스트) 왜 Testing Module을 구성하고 어떤 패키지가 사용되는지 전혀 알지 못했다. 잘못된 방법으로…","html":"<p><strong>깊이있게 학습을 하기 위해서는 원리를 알아야 한다.</strong> 웹 프레임워크(Express, NestJS)의 사용법 외에 프레임워크가 어떤 문제로 개선되었는지 원리를 파악해보자.</p>\n<p>짧은 시간이었지만 NestJS 프레임워크를 사용할 때 어려움이 많았다. (특히 테스트) 왜 Testing Module을 구성하고 어떤 패키지가 사용되는지 전혀 알지 못했다. 잘못된 방법으로\n학습하고 있다는 생각이 들어 처음으로 돌아가보려 한다. MVC 프레임워크를 만들어 보는 것이 목표다.</p>\n<h2>개발 환경 구성</h2>\n<h3>프로젝트 만들기</h3>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">mkdir</span> nodejs-nextstep <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">cd</span> nodejs-nextstep</code></pre></div>\n<p>프로젝트 폴더를 만들고 해당 폴더로 이동한다.</p>\n<p>JetBrains IDE(IntelliJ, WebStorm...)에서 TypeScript 파일을 단독으로 실행할 수 없다. 실행을 위해서는 플러그인과 패키지를 설치해야 한다.</p>\n<ul>\n<li><a href=\"https://plugins.jetbrains.com/plugin/10841-run-configuration-for-typescript/\">Run Configuration for TypeScript</a></li>\n<li><a href=\"https://www.npmjs.com/package/ts-node\">ts-node</a></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> ts-node <span class=\"token parameter variable\">-D</span> <span class=\"token comment\"># 개발 의존성</span></code></pre></div>\n<h3>코드 품질 도구</h3>\n<ul>\n<li>ESLint, Prettier</li>\n</ul>\n<h3>테스트 환경 구성</h3>\n<p>테스트 환경에 설치하는 패키지는 모두 개발 의존성으로 설치한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> jest ts-jest supertest @types/jest @types/supertest <span class=\"token parameter variable\">-D</span></code></pre></div>","frontmatter":{"title":"Node.js 입문 (0) - 프로젝트 환경 설정","date":"March 01, 2024","update":"March 01, 2024","tags":["node"],"series":"Node.js 입문 - HTTP 웹 서버 만들기"},"fields":{"slug":"/nodejs-nextstep-01-settings/","readingTime":{"minutes":1.575}}},"seriesList":{"edges":[{"node":{"id":"2b28cb91-266c-555b-a6fc-61d8ab956952","fields":{"slug":"/nodejs-nextstep-01-settings/"},"frontmatter":{"title":"Node.js 입문 (0) - 프로젝트 환경 설정"}}},{"node":{"id":"fd545063-ab5a-58c7-9f7d-1d5761d6cfb3","fields":{"slug":"/nodejs-nextstep-02-deploying-nodejs-app-on-aws-ec2-instance/"},"frontmatter":{"title":"Node.js 입문 (1) - EC2 배포하기"}}}]},"previous":{"fields":{"slug":"/2024-02-retrospective/"},"frontmatter":{"title":"2월 회고"}},"next":{"fields":{"slug":"/nodejs-nextstep-02-deploying-nodejs-app-on-aws-ec2-instance/"},"frontmatter":{"title":"Node.js 입문 (1) - EC2 배포하기"}}},"pageContext":{"id":"2b28cb91-266c-555b-a6fc-61d8ab956952","series":"Node.js 입문 - HTTP 웹 서버 만들기","previousPostId":"3d0263b6-9ef2-5ce7-b07b-72b588ff859c","nextPostId":"fd545063-ab5a-58c7-9f7d-1d5761d6cfb3"}},"staticQueryHashes":[],"slicesMap":{}}