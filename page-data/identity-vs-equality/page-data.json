{"componentChunkName":"component---src-templates-post-jsx","path":"/identity-vs-equality/","result":{"data":{"site":{"siteMetadata":{"title":"장태근블로그"}},"markdownRemark":{"id":"5e15fd20-0a73-51a1-9b85-056a874dc3cf","excerpt":"객체 지향 언어 Java에서는 어떻게 객체를 비교할까? 객체를 비교하는 핵심 개념, 동일성(Identity)과 동등성(Equality)에 대해 알아보자. 동일성과 동등성 동일성(Identity) 동일성은 두 객체가 같은 메모리 주소를 참조하는지를 의미한다.  연산자를 사용하며, 동일한 객체를 참조할 때 를 반환한다.  연산자는 값을 비교한다. 기본형(pr…","html":"<p>객체 지향 언어 Java에서는 어떻게 객체를 비교할까? 객체를 비교하는 핵심 개념, 동일성(Identity)과 동등성(Equality)에 대해 알아보자.</p>\n<h2 id=\"동일성과-동등성\" style=\"position:relative;\"><a href=\"#%EB%8F%99%EC%9D%BC%EC%84%B1%EA%B3%BC-%EB%8F%99%EB%93%B1%EC%84%B1\" aria-label=\"동일성과 동등성 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>동일성과 동등성</h2>\n<h3 id=\"동일성Identity\" style=\"position:relative;\"><a href=\"#%EB%8F%99%EC%9D%BC%EC%84%B1Identity\" aria-label=\"동일성Identity permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>동일성(Identity)</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@DisplayName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"동일한 참조를 가진 두 객체의 동일성은 같다.\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@Test</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">testIdentityWithSameReference</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Coffee</span> coffee1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Coffee</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"아메리카노\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Coffee</span> coffee2 <span class=\"token operator\">=</span> coffee1<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">boolean</span> result <span class=\"token operator\">=</span> coffee1 <span class=\"token operator\">==</span> coffee2<span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isTrue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token annotation punctuation\">@DisplayName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"다른 참조를 가진 두 객체의 동일성은 다르다.\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@Test</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">testIdentityWithDifferentReference</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Coffee</span> coffee1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Coffee</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"아메리카노\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Coffee</span> coffee2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Coffee</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"아메리카노\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">boolean</span> result <span class=\"token operator\">=</span> coffee1 <span class=\"token operator\">==</span> coffee2<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isFalse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>동일성은 두 객체가 같은 메모리 주소를 참조하는지를 의미한다.</li>\n<li><code class=\"language-text\">==</code> 연산자를 사용하며, 동일한 객체를 참조할 때 <code class=\"language-text\">true</code>를 반환한다.</li>\n</ul>\n<blockquote>\n<p><code class=\"language-text\">==</code> 연산자는 값을 비교한다. 기본형(primitive type)에서는 실제값을 비교하고, 참조형(reference type)에서는 참조값을 비교한다.</p>\n</blockquote>\n<h3 id=\"동등성Equality\" style=\"position:relative;\"><a href=\"#%EB%8F%99%EB%93%B1%EC%84%B1Equality\" aria-label=\"동등성Equality permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>동등성(Equality)</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@DisplayName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"두 객체의 실제값이 같다면 동등성은 같다.\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@Test</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">testEqualityWithSameContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Coffee</span> coffee1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Coffee</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"아메리카노\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Coffee</span> coffee2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Coffee</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"아메리카노\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\">// Object.equals() 재정의 필요</span>\n    <span class=\"token keyword\">boolean</span> result <span class=\"token operator\">=</span> coffee1<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>coffee2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isTrue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token annotation punctuation\">@DisplayName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"두 객체의 실제값이 다르다면 동등성은 같지 않다.\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@Test</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">testEqualityWithDifferentContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Coffee</span> coffee1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Coffee</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"아메리카노\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Coffee</span> coffee2<span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Coffee</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"카페라떼\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">boolean</span> result <span class=\"token operator\">=</span> coffee1<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>coffee2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token function\">assertThat</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isFalse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>동등성은 두 객체의 실제값이 같은지를 의미한다.</li>\n<li><code class=\"language-text\">Object</code>의 <code class=\"language-text\">equals()</code> 메서드를 사용하며, 서로 다른 객체라도 실제값이 같다면 <code class=\"language-text\">true</code>를 반환한다.</li>\n</ul>\n<h2 id=\"equals-메서드-오버라이딩\" style=\"position:relative;\"><a href=\"#equals-%EB%A9%94%EC%84%9C%EB%93%9C-%EC%98%A4%EB%B2%84%EB%9D%BC%EC%9D%B4%EB%94%A9\" aria-label=\"equals 메서드 오버라이딩 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>equals() 메서드 오버라이딩</h2>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// Object.equals() 기본 구현</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token operator\">==</span> obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>동등성을 비교할 때 <code class=\"language-text\">Object.equals()</code>는 재정의(override) 하지 않으면 의도대로 동작하지 않는다. 기본적으로 참조값을 비교한다.</li>\n<li>사용자 정의 클래스에서 의미 있는 동등성, 실제값을 비교하기 위해서는 재정의가 필요하다.</li>\n<li>\n<p><code class=\"language-text\">equals()</code>를 재정의 할 때는, 반드시 <code class=\"language-text\">hashCode()</code>도 재정의 해야 한다.</p>\n<ul>\n<li>Java의 기본 규약을 지키고 해시 기반 컬렉션(HashMap, HashTable, HashSet)에서 객체가 예상대로 동작하기 위함</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"정리\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%A6%AC\" aria-label=\"정리 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>정리</h2>\n<ul>\n<li>동일성과 동등성은 두 인스턴스 비교에 사용하는 핵심 개념이다. 동일성은 두 인스턴스가 '같은 존재'인지 판단한다. 동등성은 '같은 값'으로 평가되는지 확인한다.</li>\n<li>객체에서 <code class=\"language-text\">==</code>는 참조값을 비교하고, <code class=\"language-text\">equals()</code>는 객체의 실제값을 비교한다.</li>\n<li>동일한 객체는 항상 동등하지만, 동등한 객체는 반드시 동일한 객체는 아니다.</li>\n</ul>\n<p><strong>&#x3C;참고 자료></strong></p>\n<ul>\n<li><a href=\"https://inf.run/FiFGQ\">김영한 '김영한의 실전 자바 - 중급 1편'</a></li>\n<li><a href=\"https://product.kyobobook.co.kr/detail/S000211834105\">『이것이 취업을 위한 백엔드 개발이다 with 자바』(이준형, 한빛미디어, 2024)</a></li>\n</ul>","frontmatter":{"title":"동일성(Identity) vs. 동등성(Equality)","date":"July 13, 2025","update":"July 13, 2025","tags":["Java"],"series":null},"fields":{"slug":"/identity-vs-equality/","readingTime":{"minutes":3.73}}},"seriesList":{"edges":[{"node":{"id":"90c58c87-ae91-5d78-9f42-8a9bbeaec3f4","fields":{"slug":"/intellij-code-convention/"},"frontmatter":{"title":"IntelliJ Code convention 적용하기"}}},{"node":{"id":"7b0ad103-849e-546d-9c99-e4a40d330252","fields":{"slug":"/joy-of-learning/"},"frontmatter":{"title":"학문의 즐거움"}}},{"node":{"id":"c71592d2-5acc-52da-8b67-a4bb209c4bba","fields":{"slug":"/infcon-2024-guide/"},"frontmatter":{"title":"INFCON 2024 가이드"}}},{"node":{"id":"0c969a44-db4f-5a15-95d7-351ee57a9c57","fields":{"slug":"/boost-database-utilization/"},"frontmatter":{"title":"한빛앤 MSA 데이터베이스 활용도 끌어올리기 후기"}}},{"node":{"id":"6cc207f9-9aca-5f53-b237-7cd7dd50656e","fields":{"slug":"/jetbrains-ideas-volta-error/"},"frontmatter":{"title":"IntelliJ IDEA Volta 인터프리터 에러 해결하기"}}},{"node":{"id":"1acfaaf7-7344-56c5-bd9d-0473b657add1","fields":{"slug":"/infcon-2024-review/"},"frontmatter":{"title":"INFCON 2024 후기"}}},{"node":{"id":"16eee3da-f050-5182-af55-42dc73905f62","fields":{"slug":"/pangyo-evening-special-meet-up-with-devbadak-240925/"},"frontmatter":{"title":"판교 퇴근길 밋업 - 가을 특집 with 개발바닥 후기"}}},{"node":{"id":"9c94d30e-13be-5ded-9f2f-2ac792c5f38a","fields":{"slug":"/conference-puddingcamp-20240928/"},"frontmatter":{"title":"학습과 성장 컨퍼런스 2024 후기"}}},{"node":{"id":"045ef529-3ad4-5d39-9506-f2d035c665f5","fields":{"slug":"/pangyo-evening-meet-up-http-241023/"},"frontmatter":{"title":"판교 퇴근길 밋업 with 인프런 #08 HTTP 후기"}}},{"node":{"id":"0af4471c-872a-5190-b03f-7ad5d35c6ae8","fields":{"slug":"/make-declaration-of-intent-for-sungbin-club/"},"frontmatter":{"title":"성빈클럽 출사표"}}},{"node":{"id":"0f1eff33-202e-541d-bc79-8436ba0341f3","fields":{"slug":"/inflearn-warmup-club-networkingday-241213/"},"frontmatter":{"title":"인프런 워밍업 클럽 네트워킹 데이 후기"}}},{"node":{"id":"f3b0b5b5-e2e4-5536-a696-19aac60e7940","fields":{"slug":"/into-the-impossible/"},"frontmatter":{"title":"물리학자는 두뇌를 믿지 않는다"}}},{"node":{"id":"790a6e83-696c-5cc8-bbe4-1a6859f7b630","fields":{"slug":"/changing-commit-message/"},"frontmatter":{"title":"Git 커밋 메시지 수정하기"}}},{"node":{"id":"cf230da2-7c7c-5329-8feb-952353e8cb01","fields":{"slug":"/moneyup2502/"},"frontmatter":{"title":"머니업 챌린지"}}},{"node":{"id":"e5cca15a-3612-5a97-97d5-642695815930","fields":{"slug":"/http-cookie-and-session/"},"frontmatter":{"title":"HTTP 쿠키와 세션"}}},{"node":{"id":"c7e61bf8-01f9-5892-8d9f-c16fe0c9b7d3","fields":{"slug":"/langbook/"},"frontmatter":{"title":"코딩을 지탱하는 기술"}}},{"node":{"id":"d14f228a-77b3-5f22-8760-733619f23ac4","fields":{"slug":"/why-dont-i-want-to-do-anything/"},"frontmatter":{"title":"나는 왜 아무것도 하기 싫을까"}}},{"node":{"id":"0e4be1eb-4894-547d-a91b-b8fe4220f892","fields":{"slug":"/how-to-kill-port-in-use/"},"frontmatter":{"title":"사용 중인 포트 종료하기"}}},{"node":{"id":"5e15fd20-0a73-51a1-9b85-056a874dc3cf","fields":{"slug":"/identity-vs-equality/"},"frontmatter":{"title":"동일성(Identity) vs. 동등성(Equality)"}}},{"node":{"id":"07b1e6b9-d28b-5a08-997e-e5fb9789a274","fields":{"slug":"/how-to-read-book/"},"frontmatter":{"title":"책 잘 읽는 방법"}}},{"node":{"id":"a3d0c9df-ba00-5faa-b78f-20752d8a66a0","fields":{"slug":"/weinberg-on-writing/"},"frontmatter":{"title":"와인버그에게 배우는 차곡차곡 글쓰기"}}},{"node":{"id":"8968667f-70cb-5141-9af8-da46cbef36b7","fields":{"slug":"/immutable-object/"},"frontmatter":{"title":"불변 객체"}}},{"node":{"id":"34764f43-e056-50d0-be94-fd8a3848c121","fields":{"slug":"/100-day-challenge/"},"frontmatter":{"title":"#100일챌린지"}}},{"node":{"id":"5d787bc3-c932-5ef6-9456-dbcca6477880","fields":{"slug":"/github-no-newline-at-end-of-file/"},"frontmatter":{"title":"IntelliJ에서 파일 끝에 Newline 자동으로 추가하기"}}},{"node":{"id":"eab1d966-4a85-5c2d-9582-6a79c4e0bcaf","fields":{"slug":"/how-to-uppercase-sql-keywords/"},"frontmatter":{"title":"SQL 예약어 대문자로 작성하기"}}},{"node":{"id":"9fd9af31-753d-5e2e-bb0a-b80dc73ee207","fields":{"slug":"/spiral/"},"frontmatter":{"title":"오늘도 우리는 나선으로 걷는다"}}},{"node":{"id":"cd53c3df-53e7-5cf2-91c4-ec9d29ac5ed8","fields":{"slug":"/06/"},"frontmatter":{"title":""}}},{"node":{"id":"0e041579-a81e-5ca7-85bf-022cb75b75e0","fields":{"slug":"/08/"},"frontmatter":{"title":""}}},{"node":{"id":"4f8f2dc9-4108-5e38-b100-e9d785cfa14c","fields":{"slug":"/05/"},"frontmatter":{"title":""}}},{"node":{"id":"c44d6209-221a-58b6-9bf7-4ba30b9e2a2c","fields":{"slug":"/03/"},"frontmatter":{"title":""}}},{"node":{"id":"b9999505-25a3-5125-8f51-ff5b38fcf78b","fields":{"slug":"/04/"},"frontmatter":{"title":""}}},{"node":{"id":"1d95ce56-b003-5ef2-b3af-caf84cc9d5e9","fields":{"slug":"/07/"},"frontmatter":{"title":""}}},{"node":{"id":"20543270-6c28-5949-ad31-2d45c589e108","fields":{"slug":"/about/"},"frontmatter":{"title":"백엔드 개발자 장태근"}}}]},"previous":{"fields":{"slug":"/how-to-kill-port-in-use/"},"frontmatter":{"title":"사용 중인 포트 종료하기"}},"next":{"fields":{"slug":"/how-to-read-book/"},"frontmatter":{"title":"책 잘 읽는 방법"}}},"pageContext":{"id":"5e15fd20-0a73-51a1-9b85-056a874dc3cf","series":null,"previousPostId":"0e4be1eb-4894-547d-a91b-b8fe4220f892","nextPostId":"07b1e6b9-d28b-5a08-997e-e5fb9789a274"}},"staticQueryHashes":[],"slicesMap":{}}