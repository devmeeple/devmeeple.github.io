{"componentChunkName":"component---src-templates-post-jsx","path":"/modern-javascript-deep-dive-study-240909/","result":{"data":{"site":{"siteMetadata":{"title":"장태근블로그"}},"markdownRemark":{"id":"3dc58148-0d7c-5ef9-ae1b-c5b732d6f023","excerpt":"이 글은 『모던 자바스크립트 Deep Dive』 스터디 토론을 인터뷰 형식으로 정리한 글이다. 반지의 제왕 캐릭터로 비유했다. 목표 변수, 표현식과 문, 데이터 타입을 알아보자. 1 .세미콜론 글을 작성할 때 문장의 마무리로 마침표를 찍듯 세미콜론을 사용하는 언어가 많다. 하지만 자바스크립트(JavaScript)는 세미콜론이 선택 사항이다.\n프로젝트에서 …","html":"<p>이 글은 『모던 자바스크립트 Deep Dive』 스터디 토론을 인터뷰 형식으로 정리한 글이다. 반지의 제왕 캐릭터로 비유했다.</p>\n<h2 id=\"목표\" style=\"position:relative;\"><a href=\"#%EB%AA%A9%ED%91%9C\" aria-label=\"목표 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>목표</h2>\n<p>변수, 표현식과 문, 데이터 타입을 알아보자.</p>\n<h2 id=\"1-세미콜론\" style=\"position:relative;\"><a href=\"#1-%EC%84%B8%EB%AF%B8%EC%BD%9C%EB%A1%A0\" aria-label=\"1 세미콜론 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>1 .세미콜론</h2>\n<p>글을 작성할 때 문장의 마무리로 마침표를 찍듯 세미콜론을 사용하는 언어가 많다. 하지만 자바스크립트(JavaScript)는 세미콜론이 선택 사항이다.\n프로젝트에서 어떤 규칙을 사용할까.</p>\n<h3 id=\"Q-어떤-규칙을-준수하나요\" style=\"position:relative;\"><a href=\"#Q-%EC%96%B4%EB%96%A4-%EA%B7%9C%EC%B9%99%EC%9D%84-%EC%A4%80%EC%88%98%ED%95%98%EB%82%98%EC%9A%94\" aria-label=\"Q 어떤 규칙을 준수하나요 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>Q. 어떤 규칙을 준수하나요?</h3>\n<p><strong>간달프</strong>: 사용하는 것을 선호한다.</p>\n<p><strong>레골라스</strong>: 사내 컨벤션이 세미콜론을 사용하지 않는다. 문제가 발생했을 때 'Early Return 패턴<sup id=\"fnref-1\"><a href=\"#fn-1\" class=\"footnote-ref\">1</a></sup>'을 사용해서 문제를 해결했다. 개인 프로젝트에는 세미콜론을 사용한다.</p>\n<h2 id=\"2-undefined-vs-null\" style=\"position:relative;\"><a href=\"#2-undefined-vs-null\" aria-label=\"2 undefined vs null permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>2. undefined vs. null</h2>\n<p>자바스크립트 엔진은 값을 초기화하지 않으면 <code class=\"language-text\">undefined</code>를 기본으로 할당한다. 따라서 의도적으로 빈 값을 넣을 때는 <code class=\"language-text\">null</code>을 주로 사용한다.</p>\n<h3 id=\"Q-왜-undefined를-만들었을까\" style=\"position:relative;\"><a href=\"#Q-%EC%99%9C-undefined%EB%A5%BC-%EB%A7%8C%EB%93%A4%EC%97%88%EC%9D%84%EA%B9%8C\" aria-label=\"Q 왜 undefined를 만들었을까 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>Q. 왜 undefined를 만들었을까?</h3>\n<p><strong>프로도</strong>: 자바스크립트는 동적 언어다. 메모리 공간을 만들었지만(선언은 했지만) 값이 할당되지 않은 상태를 표현하기 위해 <code class=\"language-text\">undefined</code>를 만들지 않았을까?</p>\n<h2 id=\"3-변수-선언하기-var\" style=\"position:relative;\"><a href=\"#3-%EB%B3%80%EC%88%98-%EC%84%A0%EC%96%B8%ED%95%98%EA%B8%B0-var\" aria-label=\"3 변수 선언하기 var permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>3. 변수 선언하기: var</h2>\n<p>ES6 이전에는 <code class=\"language-text\">var</code> 키워드를 사용해서 변수를 선언했다. 하지만 <code class=\"language-text\">let</code>, <code class=\"language-text\">const</code> 키워드가 등장한 이후에는 코드를 작성할 때 <code class=\"language-text\">var</code> 키워드를 사용하지 않았다.\n<code class=\"language-text\">var</code> 키워드를 어떻게 바라보면 좋을까.</p>\n<p><strong>피핀</strong>: <code class=\"language-text\">var</code> 키워드는 아직도 라이브러리를 개발할 때 사용한다.</p>\n<p><strong>프로도</strong>: 아직도 사용할 수 있는 키워드고 문제는 아니다. 하지만 모두가 이해하고 사용하는 인지 비용이 높다고 생각한다. 그래서 가급적 <code class=\"language-text\">var</code> 키워드를 사용하지 않는다.</p>\n<h2 id=\"4-부동소수점\" style=\"position:relative;\"><a href=\"#4-%EB%B6%80%EB%8F%99%EC%86%8C%EC%88%98%EC%A0%90\" aria-label=\"4 부동소수점 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>4. 부동소수점</h2>\n<p>부동소수점은 정산, 결제 등 돈과 관련된 모든 도메인에서 주로 이야기하는 주제다.</p>\n<p><strong>간달프</strong>: 자바(Java)에서는 <code class=\"language-text\">BigDecimal</code> 클래스를 사용해서 문제를 해결한다.</p>\n<p><strong>레골라스</strong>: 정책에 따라 다르게 처리한다. 중요한 점은 도메인을 이해해야 한다.</p>\n<blockquote>\n<p>참고: 자세한 이야기는 부동소수점에서 알아보자.</p>\n</blockquote>\n<h2 id=\"5-네이밍-컨벤션Naming-Convention\" style=\"position:relative;\"><a href=\"#5-%EB%84%A4%EC%9D%B4%EB%B0%8D-%EC%BB%A8%EB%B2%A4%EC%85%98Naming-Convention\" aria-label=\"5 네이밍 컨벤션Naming Convention permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>5. 네이밍 컨벤션(Naming Convention)</h2>\n<p><strong>프로도</strong>: 변수명은 camelCase, 클래스, 리액트(React) 컴포넌트는 PascalCase 등 다양하게 사용한다.</p>\n<p><strong>레골라스</strong>: 네이밍을 할 때 어려운 점과 참고하기 좋은 서적을 공유했다.</p>\n<h2 id=\"마치며\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-label=\"마치며 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>마치며</h2>\n<p>간단한 주제였지만 꽤 오랜 시간이 걸렸다. 그래도 다양한 사고가 확장되는 경험을 해서 좋았다.\n추후에 스코프와 호이스팅을 배우면 더 깊은 대화를 할 수 있을 것 같아 기대된다.</p>\n\n      <div class=\"footnotes\">\n        \n        <ol >\n    \n    <li class=\"footnote-list-item\" id=\"fn-1\" >\n          \n        <p class=\"footnote-paragraph\" style=\"display:inline; \">『리팩터링』(마틴 파울러, 한빛미디어, 2020)</p>\n      <a href=\"#fnref-1\" class=\"footnote-backref\" style=\"display:inline;text-decoration: none;\">\n        ↩\n      </a>\n    \n      </li>\n      \n    </ol></div>","frontmatter":{"title":"모던 자바스크립트 Deep Dive 회고 - 1주차","date":"September 09, 2024","update":"September 09, 2024","tags":["JavaScript/TypeScript"],"series":"모던 자바스크립트 Deep Dive"},"fields":{"slug":"/modern-javascript-deep-dive-study-240909/","readingTime":{"minutes":3.965}}},"seriesList":{"edges":[{"node":{"id":"d29c05d6-8a68-5712-9072-f96e172811d1","fields":{"slug":"/modern-javascript-deep-dive-study-240902/"},"frontmatter":{"title":"모던 자바스크립트 Deep Dive - OT"}}},{"node":{"id":"3dc58148-0d7c-5ef9-ae1b-c5b732d6f023","fields":{"slug":"/modern-javascript-deep-dive-study-240909/"},"frontmatter":{"title":"모던 자바스크립트 Deep Dive 회고 - 1주차"}}}]},"previous":{"fields":{"slug":"/modern-javascript-deep-dive-study-240902/"},"frontmatter":{"title":"모던 자바스크립트 Deep Dive - OT"}},"next":{"fields":{"slug":"/pangyo-evening-special-meet-up-with-devbadak-240925/"},"frontmatter":{"title":"판교 퇴근길 밋업 - 가을 특집 with 개발바닥 후기"}}},"pageContext":{"id":"3dc58148-0d7c-5ef9-ae1b-c5b732d6f023","series":"모던 자바스크립트 Deep Dive","previousPostId":"d29c05d6-8a68-5712-9072-f96e172811d1","nextPostId":"9a8c4cc1-93c7-5b5a-9172-cb5851390bd7"}},"staticQueryHashes":[],"slicesMap":{}}